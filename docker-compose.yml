services:
  postgres:
    image: postgres:15-alpine
    container_name: nestjs-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nestjs-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    restart: always
    ports:
      - '${PORT}:3000'
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nestjs-network

volumes:
  postgres_data:

networks:
  nestjs-network:
    driver: bridge
