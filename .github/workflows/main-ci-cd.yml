# name: CI/CD Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   # Job 1: Run tests
#   test:
#     name: Run Tests
#     runs-on: ubuntu-latest

#     services:
#       # PostgreSQL service for tests
#       postgres:
#         image: postgres:15-alpine
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres123
#           POSTGRES_DB: movies_db_test
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       # Step 1: Get the code
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # Step 2: Setup Node.js
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20.x'
#           cache: 'npm'

#       # Step 3: Install dependencies
#       - name: Install dependencies
#         run: npm ci

#       # Step 4: Run linter
#       - name: Lint code
#         run: npm run lint

#       # Step 5: Run unit tests
#       - name: Run unit tests
#         env:
#           DB_HOST: localhost
#           DB_PORT: 5432
#           DB_USERNAME: postgres
#           DB_PASSWORD: postgres123
#           DB_NAME: movies_db_test
#           JWT_SECRET: test-secret-key-for-ci-pipeline-minimum-32-characters-long
#           JWT_EXPIRATION: 1d
#           NODE_ENV: test
#         run: npm run test

#       # Step 6: Run end-to-end tests
#       - name: Run e2e tests
#         env:
#           DB_HOST: localhost
#           DB_PORT: 5432
#           DB_USERNAME: postgres
#           DB_PASSWORD: postgres123
#           DB_NAME: movies_db_test
#           JWT_SECRET: test-secret-key-for-ci-pipeline-minimum-32-characters-long
#           JWT_EXPIRATION: 1d
#           NODE_ENV: test
#         run: npm run test:e2e

#   # Job 2: Build the application
#   build:
#     name: Build Application
#     runs-on: ubuntu-latest
#     needs: test  # Only runs if tests pass

#     steps:
#       # Step 1: Get the code
#       - name: Checkout code
#         uses: actions/checkout@v4

#       # Step 2: Setup Node.js
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20.x'
#           cache: 'npm'

#       # Step 3: Install dependencies
#       - name: Install dependencies
#         run: npm ci

#       # Step 4: Build the application
#       - name: Build
#         run: npm run build

#       # Step 5: Save build artifacts
#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist
#           path: dist/
#           retention-days: 7
